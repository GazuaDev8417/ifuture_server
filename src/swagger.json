{
  "openapi": "3.0.0",
  "info": {
    "title": "Ifuture API Documentation",
    "version": "1.0.0",
    "description": "API documentation for the [Ifuture](https://gazuadev8417.github.io/ifuture_react/) project. A simulation of fastfood delivery application as personal project."
  },
  "tags": [
    {
      "name": "User Management",
      "description": "Operations related to user accounts"
    },
    {
      "name": "User's Profile Address Management",
      "description": "Operations for managing user's profile address"
    },
    {
      "name": "Restaurant Management",
      "description": "Operations related to restaurant accounts"
    },
    {
      "name": "Order Management",
      "description": "Operations related to the orders made by users to restaurants"
    }
  ],
  "servers": [
    {
      "url": "https://ifuture-server.vercel.app",
      "description": "Remote server"
    },
    {
      "url": "http://localhost:3003",
      "description": "Local sever"
    }

  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": ["User Management"],
        "summary": "User Signup",
        "description": "Registers a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "New Guest" },
                  "email": { "type": "string", "example": "newgust@email.com" },
                  "cpf": { "type": "string", "example": "12345678910" },
                  "password": { "type": "string", "example": "123456" },
                  "confirmPass": { "type": "string", "example": "123456" }
                },
                "required": ["name", "email", "password", "confirmPass"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["User Management"],
        "summary": "User Login",
        "description": "Logs in an existing user's account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "visitante@email.com" },
                  "password": { "type": "string", "example": "123456" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get Profile",
        "description": "Retrieves the profile of the logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": { "type": "string", "example": "Visitante" },
                    "email": { "type": "string", "example": "visitante@email.com" },
                    "street": { "type": "string", "example": "Rua Meyer" },
                    "cep": { "type": "string", "example": "86015160" },
                    "number": { "type": "string", "example": "" },
                    "neighbourhood": { "type": "string", "example": "Jardim Higienópolis" },
                    "city": { "type": "string", "example": "Londrina" },
                    "state": { "type": "string", "example": "Paraná" },
                    "complement": { "type": "string", "example": "" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/address": {
      "patch": {
        "tags": ["User's Profile Address Management"],
        "summary": "Regists or updates Profile's address",
        "description": "Regists or updates the profile's address of the logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "street": { "type": "string", "example": "Rua Meyer" },
                  "cep": { "type": "string", "example": "41110330" },
                  "number": { "type": "string", "example": "132" },
                  "neighbourhood": { "type": "string", "example": "Jardim Higienópolis" },
                  "city": { "type": "string", "example": "Londrina" },
                  "state": { "type": "string", "example": "Paraná" },
                  "complement": { "type": "string", "example": "" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update profile's address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Profile's updated successfully" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": ["User's Profile Address Management"],
        "summary": "Get Profile's address",
        "description": "Retrieves the profile's address of the logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile's address retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "street": { "type": "string", "example": "Rua Meyer" },
                    "cep": { "type": "string", "example": "Rua Meyer" },
                    "number": { "type": "string", "example": "132" },
                    "neighbourhood": { "type": "string", "example": "Jardim Higienópolis" },
                    "city": { "type": "string", "example": "Londrina" },
                    "state": { "type": "string", "example": "Paraná" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user": {
      "patch": {
        "tags": ["User Management"],
        "summary": "Updates the user's profile",
        "description": "Updates the profile of the logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "example": "Updated name" },
                  "email": { "type": "string", "example": "updatedemail@email.com" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile's user updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Profile's updated successfully" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["User Management"],
        "summary": "Delete user's account and all its orders",
        "description": "Removes the account of the logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's account was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "User's account removed successfully" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/signup_restaurant": {
      "post": {
        "tags": ["Restaurant Management"],
        "summary": "Restaurant Signup",
        "description": "Registers a new restaurant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": { "type": "string", "example": "" },
                  "deliveryTime": { "type": "integer", "example": 0 },
                  "description": { "type": "string", "example": "O Jeronimo Burger é uma rede de restaurantes conhecida por seus hambúrgueres artesanais e ambiente descontraído." },
                  "logourl": { "type": "string", "example": "https://villaromanashopping.com.br/wp-content/uploads/2019/10/Banner_-jeronimo.png" },
                  "shipping": { "type": "integer", "example": 0 },
                  "cnpj": { "type": "string", "example": "XXXXXXXXYYYYZZ" },
                  "password": { "type": "string", "example": "123456" },
                  "confirmPass": { "type": "string", "example": "123456" }
                },
                "required": ["category", "description", "name", "password", "cnpj"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Restaurant registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["Restaurant Management"],
        "summary": "Insert Products",
        "description": "Inserting products in restaurant's menu",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "category": { "type": "string", "example": "Category's product" },
                  "description": { "type": "string", "example": "The description of the product" },
                  "name": { "type": "string", "example": "The name of the product" },
                  "photoUrl": { "type": "string", "example": "The url's image address of the product" },
                  "price": { "type": "integer", "example": "The product's price" }
                },
                "required": [ "category", "description", "name", "photoUrl", "price" ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Regists a new product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Product registered successfully!" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/login_restaurant": {
      "post": {
        "tags": ["Restaurant Management"],
        "summary": "Restaurant Login",
        "description": "Logs in an existing restaurant's account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cnpj": { "type": "string", "example": "XXXXXXXXYYYYZZ" },
                  "password": { "type": "string", "example": "123456" }
                },
                "required": ["password", "cnpj"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Restaurant logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/restaurants": {
      "get": {
        "tags": ["Restaurant Management"],
        "summary": "Get Restaurants",
        "description": "Retrieves a list of all restaurants",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "responses": {
          "200": {
          "description": "List of restaurants",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string", "example": "Nearest Address" },
                    "category": { "type": "string", "example": "Fast Food" },
                    "deliverytime": { "type": "integer", "example": "Delivery time" },
                    "description": { "type": "string", "example": "Description of restaurant" },
                    "id": { "type": "string", "example": "e3be50e8-aa0b-4439-82db-72668766983f" },
                    "logourl": { "type": "string", "example": "Restaurant's image url" },
                    "name": { "type": "string", "example": "Restaurant's name" },
                    "shipping": { "type": "integer", "example": "Shipping's price" },
                    "cnpj": { "type": "string", "example": "XXXXXXXXYYYYZZ" }
                  }
                }
              }
            }
          }
        },
        "400": {
            "description": "Bad request"
          }
      }
    }
    },
    "/restaurants/:id": {
      "get": {
        "tags": ["Restaurant Management"],
        "summary": "Get Restaurant by its id",
        "description": "Retrieves a restaurant's details",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMxNTExODk3fQ.hfTmh7hfOSQ2SxJXlJoRQ7mA-f-TwUHOvo7HXqAaZPY" }
          }
        ],
        "responses": {
          "200": {
          "description": "Restaurant's details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": { "type": "string", "example": "Nearest Address" },
                  "category": { "type": "string", "example": "Fast Food" },
                  "deliverytime": { "type": "integer", "example": "Delivery time" },
                  "description": { "type": "string", "example": "Description of restaurant" },
                  "id": { "type": "string", "example": "e3be50e8-aa0b-4439-82db-72668766983f" },
                  "logourl": { "type": "string", "example": "Restaurant's image url" },
                  "name": { "type": "string", "example": "Restaurant's name" },
                  "shipping": { "type": "integer", "example": "Shipping's price" },
                  "cnpj": { "type": "string", "example": "XXXXXXXXYYYYZZ" }
                }
              }
            }
          }
        },
        "400": {
            "description": "Bad request"
          }
      }
    }
    },
    "/restaurant_products/:id": {
      "get": {
        "tags": ["Restaurant Management"],
        "summary": "Get Restaurants' menu",
        "description": "Retrieves a list of restaurants' products",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "responses": {
          "200": {
          "description": "Restaurants' menu",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "category": { "type": "string", "example": "Product's category" },
                    "description": { "type": "string", "example": "Product's description" },
                    "id": { "type": "string", "example": "Product's id" },
                    "name": { "type": "string", "example": "Product's name" },
                    "photoUrl": { "type": "string", "example": "Product's image url" },
                    "price": { "type": "integer", "example": "Product price" },
                    "provider": { "type": "string", "example": "Provider restaurant's id" }
                  }
                }
              }
            }
          }
        },
        "404": {
            "description": "Not Found"
          }
      }
    }
    },
    "/restaurant_orders": {
      "get": {
        "tags": ["Restaurant Management"],
        "summary": "Get restaurant's requested orders",
        "description": "Retrieves a list of requested orders by a logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "responses": {
          "200": {
          "description": "List of orders",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "e3be50e8-aa0b-4439-82db-72668766983f" },
                    "product": { "type": "string", "example": "Product name" },
                    "price": { "type": "integer", "example": "Product price" },
                    "photoUrl": { "type": "string", "example": "Product's image url" },
                    "quantity": { "type": "integer", "example": "Quantity of product" },
                    "total": { "type": "integer", "example": "The total price - qunantity * price" },
                    "moment": { "type": "string", "example": "Time and date of the requested order" },
                    "restaurant": { "type": "integer", "example": "The provider restaurant of the product" },
                    "client": { "type": "string", "example": "the logged-in user's id" },
                    "state": { "type": "string", "example": "State of order" }
                  }
                }
              }
            }
          }
        },
        "404": {
            "description": "Not Found"
          }
      }
      }
    },
    "/active_restaurant_orders": {
      "get": {
        "tags": ["Restaurant Management"],
        "summary": "Get restaurant's finished orders",
        "description": "Retrieves a list of finished orders by a logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "responses": {
          "200": {
          "description": "List of orders",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "e3be50e8-aa0b-4439-82db-72668766983f" },
                    "product": { "type": "string", "example": "Product name" },
                    "price": { "type": "integer", "example": "Product price" },
                    "photoUrl": { "type": "string", "example": "Product's image url" },
                    "quantity": { "type": "integer", "example": "Quantity of product" },
                    "total": { "type": "integer", "example": "The total price - qunantity * price" },
                    "moment": { "type": "string", "example": "Time and date of the requested order" },
                    "restaurant": { "type": "integer", "example": "The provider restaurant of the product" },
                    "client": { "type": "string", "example": "the logged-in user's id" },
                    "state": { "type": "string", "example": "State of order" }
                  }
                }
              }
            }
          }
        },
        "404": {
            "description": "Not Found"
          }
      }
      }
    }, 
    "/order": {
      "post": {
        "tags": ["Order Management"],
        "summary": "Create Order",
        "description": "Creates a new order",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product": { "type": "string", "example": "Product name" },
                  "price": { "type": "integer", "example": "Product price" },
                  "quantity": { "type": "integer", "example": "Product quantity" },
                  "restaurant": { "type": "string", "example": "Product provider id" },
                  "photoUrl": { "type": "string", "example": "Url's image of the product" }
                  
                },
                "required": [ "product", "price", "quantity", "restaurant", "photoUrl" ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Order registered successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/order/:id": {
      "patch": {
        "tags": ["Order Management"],
        "summary": "Changes order's quantity",
        "description": "Updates order's quantity and consequently its total price",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": { "type": "integer", "example": "Quantity of product" }
                  
                },
                "required": [ "quantity" ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alter product's quantity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Product quantity altered successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": ["Order Management"],
        "summary": "Delete order",
        "description": "Removes the order of a logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an updated array with the specific order removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Order removed successfully" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Order Management"],
        "summary": "Get all users' requested orders",
        "description": "Retrieves a list of requested orders by a logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "responses": {
          "200": {
          "description": "List of orders",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "e3be50e8-aa0b-4439-82db-72668766983f" },
                    "product": { "type": "string", "example": "Product name" },
                    "price": { "type": "integer", "example": "Product price" },
                    "photoUrl": { "type": "string", "example": "Product's image url" },
                    "quantity": { "type": "integer", "example": "Quantity of product" },
                    "total": { "type": "integer", "example": "The total price - qunantity * price" },
                    "moment": { "type": "string", "example": "Time and date of the requested order" },
                    "restaurant": { "type": "integer", "example": "The provider restaurant of the product" },
                    "client": { "type": "string", "example": "the logged-in user's id" },
                    "state": { "type": "string", "example": "State of order" }
                  }
                }
              }
            }
          }
        },
        "404": {
            "description": "Not Found"
          }
      }
      },
      "delete": {
        "tags": ["Order Management"],
        "summary": "Erases orders history",
        "description": "Delete the whole user's orders history",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clean the list of finished orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Order history removed successfully" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/active_orders": {
      "get": {
        "tags": ["Order Management"],
        "summary": "Get all users' finished orders",
        "description": "Retrieves a list of finished orders by a logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "responses": {
          "200": {
          "description": "List of orders",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "e3be50e8-aa0b-4439-82db-72668766983f" },
                    "product": { "type": "string", "example": "Product name" },
                    "price": { "type": "integer", "example": "Product price" },
                    "photoUrl": { "type": "string", "example": "Product's image url" },
                    "quantity": { "type": "integer", "example": "Quantity of product" },
                    "total": { "type": "integer", "example": "The total price - qunantity * price" },
                    "moment": { "type": "string", "example": "Time and date of the requested order" },
                    "restaurant": { "type": "integer", "example": "The provider restaurant of the product" },
                    "client": { "type": "string", "example": "the logged-in user's id" },
                    "state": { "type": "string", "example": "State of order" }
                  }
                }
              }
            }
          }
        },
        "404": {
            "description": "Not Found"
          }
      }
    }
    },
    "/finished_orders": {
      "patch": {
        "tags": ["Order Management"],
        "summary": "Completes orders",
        "description": "Carries out the purchase of orders",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwOTU2MDI2fQ.XBXYv1T5eheqKgp883xicBuMW4tXVQFRq8g96oI6F6A" }
          }
        ],
        "responses": {
          "200": {
          "description": "Finish orders",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string", "example": "Pedido finalizado" }
                }
              }
            }
          }
        },
        "400": {
            "description": "Bad request"
          }
      }
    }
    },
    "/requested_orders": {
      "delete": {
        "tags": ["Order Management"],
        "summary": "Erases all the requested orders",
        "description": "Delete the whole user's requested orders",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiZTNiZTUwZTgtYWEwYi00NDM5LTgyZGItNzI2Njg3NjY5ODNmIiwiaWF0IjoxNzMwNjQ3NzAxfQ.Jhw3rQK2h6Uc0zStYuVM6fzvCVn066hBQzKw_wIS0PM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clean the list of requested orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Requested orders removed successfully" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  }
}
